/**
 *
 *  Vetically centers content (flexbox alternative) within a container with
 *  with a height and width. (does not work in something with height or width
 *  of 0 and container needs to be positioned relative/absolute/fixed)
 *
 *  Usage:
 *  <div class="container">
 *		<div class="v-center">
 *			<div>
 *				Your content here
 *			</div>
 *		</div>
 *	</div>
 *
 */
.v-center{
	position: absolute;
	width: 100%;
	height: 100%;
	display: block;
	text-align: center;
	top: 0;
	left: 0;

	&:before {
		content: '';
		display: inline-block;
		height: 100%;
		vertical-align: middle;
		margin-right: -0.25em;
	}

	>*{
		display: inline-block;
		vertical-align: middle;
		max-width: 90%;
	}
}

/**
 *
 *  Hides the element on desktop resolutions
 *
 */
.show-on-mobile{
	display: none;

	@include break(mobile-land) {
		display: inherit;
	}
}

/**
 *
 *  Hides the element on mobile resolutions
 *
 */
.hide-on-mobile{
	@include break(mobile-land) {
		display: none;
	}
}

/**
 *
 *  Resets the UL elements
 *
 */
.ul-reset{
	margin: 0;
	padding: 0;
	list-style: none;
}

/**
 *
 *  Inlines the LI elements. To be applied on the UL element.
 *
 */
.li-inline li{
	display: inline-block;
}

/**
 *
 *  Floats: right and left
 *
 */
.flr{
	float: right;
}

.fll{
	float: left;
}

/**
 *
 *  Clearfixes elements to fix ghost margins and overflows
 *
 */
.clearfix{
	&:after {
    content: "\0020";
    display: block;
    height: 0;
    clear: both;
    visibility: hidden;
  }
}

/**
 *
 *  Ratioed elements
 *
 */
.ratio{
	max-height: 100%;
	overflow: hidden;
	padding: 0;

	> * {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
	}

	&:before{
		content: '';
		display: block;
		position: relative;
		width: 100%;
		padding-bottom: 0;
	}

	@each $class, $percent in $ratios {
		&--#{$class}{
			@extend .ratio;

			&:before{
				padding-bottom: $percent;
			}
		}
	}
}
